{
    "description": "NPM包依赖分析器",
    "version": "查看版本",
    "help": "查看帮助",
    "commands": {
        "help": {
            "description": "查看命令帮助."
        },
        "analyze": {
            "argument": [
                { "description": "所需分析的根目录." }
            ],
            "description": "基于依赖关系递归分析当前目录下的node_modules.", 
            "options": {
                "scope": {
                    "description": "设置依赖包检测的scope."
                },
                "depth": {
                    "default": "不设深度.",
                    "description": "设置最大递归深度."
                },
                "json": {
                    "description": "将结果输出为JSON文件, 否则打开网页视图."
                },
                "noweb": {
                    "description": "完成分析后不启动网页视图."
                },
                "format": {
                    "description": "自动格式化JSON文件."
                },
                "question": {
                    "description": "询问各种选项配置."
                },
                "host": {
                    "description": "视图网页开启的地址."
                },
                "port": {
                    "description": "视图网页开启的端口号."
                },
                "proto": {
                    "description": "输出树形的递归结果(不转化为可视化用的有向图结构)."
                },
                "console": {
                    "description": "将结果打印至控制台."
                },
                "manager": {
                    "description": "指定该项目的包管理器."
                },
                "extra": {
                    "description": "如果存在游离包，以其为起点继续分析依赖关系."
                }
            }
        },
        "detect": {
            "description": "基于文件递归扫描当前目录下的node_modules.",
            "argument": [
                { "description": "所需扫描的根目录." }
            ],
            "options" : {
                "count": {
                    "description": "扫描完后仅显示检测到的包文件数量."
                },
                "raw": {
                    "description": "按行打印检测结果, 不转化成树图."
                }
            }
        },
        "view": {
            "description": "打开一个依赖关系数据JSON文件的网页视图.",
            "argument": [
                { "description": "需要加载的JSON输出文件路径" }
            ]
        },
        "get": {
            "description": "从'registry.npmjs.org'获取包的信息.",
            "argument": [
                { "description": "查询的包名或id." }
            ],
            "options": {
                "version": {
                    "description": "指定获取的包版本范围（遵循semver）."
                },
                "all": {
                    "description": "获取所有符合-v选项指定版本范围的包, 否则自动获取符合范围的最新版本."
                }
            }
        }
    },
    "commons": {
        "error": "错误"
    },
    "line": {
        "default": "默认",
        "input.dir": "输入目录",
        "input.name": "输入依赖包的名称",
        "input.outJson": "是否输出JSON文件",
        "input.outJsonDir": "输出的JSON文件名",
        "input.manager": "选择目录的包管理器",
        "input.scope": "选择搜索的范围",
        "input.depth": "递归深度",
        "input.port": "端口号",
        "input.jsonFile": "输入JSON文件名",
        "input.extraAnalyze": "是否需要分析这些包的依赖关系?",
        "status.noResult": "无结果...",
        "status.searching": "搜索中..."
    },
    "logs": {
        "cli.ts": {
            "dirNotExist": "目录不存在!",
            "fileNotExist": "文件不存在!",
            "notJsonFile": "目标不是JSON文件!",
            "pkgJsonNotExist": "%s根目录下的package.json文件不存在!",
            "detected": "检测到%s个依赖包.",
            "noDependency": "该项目未安装任何依赖.",
            "jsonSaved": "%len条分析结果已保存至%s, 评估结果已保存至%e.",
            "detectPkg": "扫描到的依赖包文件数:",
            "portInvalid": "端口号必须在1到65535之间!",
            "analyzed": "已分析%len个依赖包.",
            "extraAnalyzeStart": "正在对%len个未使用包启动依赖分析.."
        },
        "express.ts": {
            "start": "网页视图已在 %s 打开."
        },
        "utils/analyze.ts": {
            "nowComplete": "当前"
        },
        "utils/evaluate.ts": {
            "coverage": "递归深度: %d, 覆盖率: %cv. 有 %len 个依赖包尚未分析到.",
            "extra": "共 %len 条记录",
            "notInHash": "以下依赖包在node_modules中存在, 但没有被依赖分析覆盖到.",
            "notInHash2": "这些包有可能未被使用?",
            "notInList": "以下依赖包在node_modules中已被依赖分析, 但未被文件扫描到.",
            "optNotMeet": "发现 %d 个可选依赖包没有安装.",
            "rangeInvalid": "发现 %d 个依赖包版本%1不合要求%1.",
            "pkgNotFound": "发现 %d 个必需依赖包%1未安装%1:",
            "pkgNotFound2": "请确认所有依赖包是否安装完整."
        }
    }
}